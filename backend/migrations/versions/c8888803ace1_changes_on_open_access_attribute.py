"""Changes on open_access attribute

Revision ID: c8888803ace1
Revises: 4cffea26df81
Create Date: 2025-10-13 01:29:24.936410

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'c8888803ace1'
down_revision: Union[str, Sequence[str], None] = '4cffea26df81'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Use batch_alter_table for SQLite compatibility
    with op.batch_alter_table('publicationconference', schema=None) as batch_op:
        batch_op.alter_column(
            'is_open_access',
            existing_type=sa.Boolean(),
            nullable=True
        )

    with op.batch_alter_table('publicationrevue', schema=None) as batch_op:
        batch_op.alter_column(
            'is_open_access',
            existing_type=sa.Boolean(),
            nullable=True
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    with op.batch_alter_table('publicationrevue', schema=None) as batch_op:
        batch_op.alter_column(
            'is_open_access',
            existing_type=sa.Boolean(),
            nullable=False
        )

    with op.batch_alter_table('publicationconference', schema=None) as batch_op:
        batch_op.alter_column(
            'is_open_access',
            existing_type=sa.Boolean(),
            nullable=False
        )

    # ### end Alembic commands ###
