"""ajout de publications models et lien avec chercheur

Revision ID: 9bae7766e97b
Revises: 58da69c0e50a
Create Date: 2025-09-30 10:42:39.723840

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '9bae7766e97b'
down_revision: Union[str, Sequence[str], None] = '58da69c0e50a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conference',
    sa.Column('nom', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('acronyme', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('revue',
    sa.Column('nom', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('issn', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('e_issn', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_revue_e_issn'), 'revue', ['e_issn'], unique=True)
    op.create_index(op.f('ix_revue_issn'), 'revue', ['issn'], unique=True)
    op.create_table('conferenceranking',
    sa.Column('core_ranking', sa.Enum('A*', 'A', 'B', 'C', name='coreranking'), nullable=True),
    sa.Column('is_scopus_indexed', sa.Boolean(), nullable=True),
    sa.Column('conference_id', sa.Integer(), nullable=False),
    sa.Column('annee', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['conference_id'], ['conference.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('conference_id', 'annee')
    )
    op.create_table('publicationconference',
    sa.Column('titre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('abstract', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('doi', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('annee_publication', sa.Integer(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_open_access', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['conference_id'], ['conference.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_publicationconference_doi'), 'publicationconference', ['doi'], unique=True)
    op.create_table('publicationrevue',
    sa.Column('titre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('abstract', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('doi', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('annee_publication', sa.Integer(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_open_access', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('revue_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['revue_id'], ['revue.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_publicationrevue_doi'), 'publicationrevue', ['doi'], unique=True)
    op.create_table('revueranking',
    sa.Column('scimago_rank', sa.Enum('Q1', 'Q2', 'Q3', 'Q4', name='scimagoranking'), nullable=True),
    sa.Column('dgrsdt_rank', sa.Enum('A+', 'A', 'B', 'C', 'D', 'E', 'PEDIATRICE', name='dgrstranking'), nullable=True),
    sa.Column('is_scopus_indexed', sa.Boolean(), nullable=True),
    sa.Column('annee', sa.Integer(), nullable=False),
    sa.Column('revue_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['revue_id'], ['revue.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('annee', 'revue_id')
    )
    op.create_table('lienchercheurconference',
    sa.Column('chercheur_id', sa.Integer(), nullable=False),
    sa.Column('publication_id', sa.Integer(), nullable=False),
    sa.Column('chercheur_ordre', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chercheur_id'], ['chercheur.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['publication_id'], ['publicationconference.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('chercheur_id', 'publication_id')
    )
    op.create_table('lienchercheurrevue',
    sa.Column('chercheur_id', sa.Integer(), nullable=False),
    sa.Column('publication_id', sa.Integer(), nullable=False),
    sa.Column('chercheur_ordre', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chercheur_id'], ['chercheur.id'],ondelete='CASCADE' ),
    sa.ForeignKeyConstraint(['publication_id'], ['publicationrevue.id'],ondelete='CASCADE' ),
    sa.PrimaryKeyConstraint('chercheur_id', 'publication_id')
    )
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lienchercheurrevue')
    op.drop_table('lienchercheurconference')
    op.drop_table('revueranking')
    op.drop_index(op.f('ix_publicationrevue_doi'), table_name='publicationrevue')
    op.drop_table('publicationrevue')
    op.drop_index(op.f('ix_publicationconference_doi'), table_name='publicationconference')
    op.drop_table('publicationconference')
    op.drop_table('conferenceranking')
    op.drop_index(op.f('ix_revue_issn'), table_name='revue')
    op.drop_index(op.f('ix_revue_e_issn'), table_name='revue')
    op.drop_table('revue')
    op.drop_table('conference')
    # ### end Alembic commands ###
